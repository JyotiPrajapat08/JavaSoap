
package my.services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import my.interfaces.BakedGoods;
import my.interfaces.ObjectFactory;
import my.interfaces.Users;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IBake", targetNamespace = "http://interfaces.my/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IBake {


    /**
     * 
     * @return
     *     returns java.util.List<my.interfaces.BakedGoods>
     */
    @WebMethod
    @WebResult(name = "BakedGoodsList", targetNamespace = "")
    @RequestWrapper(localName = "getAllBakedGoods", targetNamespace = "http://interfaces.my/", className = "my.interfaces.GetAllBakedGoods")
    @ResponseWrapper(localName = "getAllBakedGoodsResponse", targetNamespace = "http://interfaces.my/", className = "my.interfaces.GetAllBakedGoodsResponse")
    @Action(input = "http://interfaces.my/IBake/getAllBakedGoodsRequest", output = "http://interfaces.my/IBake/getAllBakedGoodsResponse")
    public List<BakedGoods> getAllBakedGoods();

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "insertUser", targetNamespace = "")
    @RequestWrapper(localName = "insertUsers", targetNamespace = "http://interfaces.my/", className = "my.interfaces.InsertUsers")
    @ResponseWrapper(localName = "insertUsersResponse", targetNamespace = "http://interfaces.my/", className = "my.interfaces.InsertUsersResponse")
    @Action(input = "http://interfaces.my/IBake/insertUsersRequest", output = "http://interfaces.my/IBake/insertUsersResponse")
    public String insertUsers(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "UpdatedUser", targetNamespace = "")
    @RequestWrapper(localName = "updatedUser", targetNamespace = "http://interfaces.my/", className = "my.interfaces.UpdatedUser")
    @ResponseWrapper(localName = "updatedUserResponse", targetNamespace = "http://interfaces.my/", className = "my.interfaces.UpdatedUserResponse")
    @Action(input = "http://interfaces.my/IBake/updatedUserRequest", output = "http://interfaces.my/IBake/updatedUserResponse")
    public int updatedUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "deleteBakedGoods", targetNamespace = "")
    @RequestWrapper(localName = "deleteBakedGoods", targetNamespace = "http://interfaces.my/", className = "my.interfaces.DeleteBakedGoods")
    @ResponseWrapper(localName = "deleteBakedGoodsResponse", targetNamespace = "http://interfaces.my/", className = "my.interfaces.DeleteBakedGoodsResponse")
    @Action(input = "http://interfaces.my/IBake/deleteBakedGoodsRequest", output = "http://interfaces.my/IBake/deleteBakedGoodsResponse")
    public String deleteBakedGoods(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "login", targetNamespace = "")
    @RequestWrapper(localName = "getLogin", targetNamespace = "http://interfaces.my/", className = "my.interfaces.GetLogin")
    @ResponseWrapper(localName = "getLoginResponse", targetNamespace = "http://interfaces.my/", className = "my.interfaces.GetLoginResponse")
    @Action(input = "http://interfaces.my/IBake/getLoginRequest", output = "http://interfaces.my/IBake/getLoginResponse")
    public boolean getLogin(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<my.interfaces.Users>
     */
    @WebMethod
    @WebResult(name = "usersList", targetNamespace = "")
    @RequestWrapper(localName = "getAllUsers", targetNamespace = "http://interfaces.my/", className = "my.interfaces.GetAllUsers")
    @ResponseWrapper(localName = "getAllUsersResponse", targetNamespace = "http://interfaces.my/", className = "my.interfaces.GetAllUsersResponse")
    @Action(input = "http://interfaces.my/IBake/getAllUsersRequest", output = "http://interfaces.my/IBake/getAllUsersResponse")
    public List<Users> getAllUsers();

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "insertBakedGoods", targetNamespace = "")
    @RequestWrapper(localName = "insertBakedGoods", targetNamespace = "http://interfaces.my/", className = "my.interfaces.InsertBakedGoods")
    @ResponseWrapper(localName = "insertBakedGoodsResponse", targetNamespace = "http://interfaces.my/", className = "my.interfaces.InsertBakedGoodsResponse")
    @Action(input = "http://interfaces.my/IBake/insertBakedGoodsRequest", output = "http://interfaces.my/IBake/insertBakedGoodsResponse")
    public String insertBakedGoods(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Double arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "deleteUser", targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://interfaces.my/", className = "my.interfaces.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://interfaces.my/", className = "my.interfaces.DeleteUserResponse")
    @Action(input = "http://interfaces.my/IBake/deleteUserRequest", output = "http://interfaces.my/IBake/deleteUserResponse")
    public String deleteUser(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "UpdatedBakedGoods", targetNamespace = "")
    @RequestWrapper(localName = "updatedBakedGoods", targetNamespace = "http://interfaces.my/", className = "my.interfaces.UpdatedBakedGoods")
    @ResponseWrapper(localName = "updatedBakedGoodsResponse", targetNamespace = "http://interfaces.my/", className = "my.interfaces.UpdatedBakedGoodsResponse")
    @Action(input = "http://interfaces.my/IBake/updatedBakedGoodsRequest", output = "http://interfaces.my/IBake/updatedBakedGoodsResponse")
    public int updatedBakedGoods(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Double arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

}
